-- ‚öõÔ∏è XENO ORB OF DEATH
-- All parts (even anchored) teleport to form an orb around you.
-- They stop, and fling-kill any player that touches them.
-- GUI shows if it‚Äôs active. Works after death.

local Players = game:GetService("Players")
local RS = game:GetService("RunService")
local UIS = game:GetService("UserInputService")
local LocalPlayer = Players.LocalPlayer

-- === GUI Setup ===
local gui = Instance.new("ScreenGui")
gui.Name = "OrbStatusGui"
gui.ResetOnSpawn = false
gui.Parent = game.CoreGui

local label = Instance.new("TextLabel")
label.Size = UDim2.new(0, 250, 0, 50)
label.Position = UDim2.new(0, 20, 0, 100)
label.BackgroundColor3 = Color3.fromRGB(40, 40, 40)
label.TextColor3 = Color3.fromRGB(255, 255, 255)
label.Font = Enum.Font.GothamBold
label.TextSize = 18
label.Text = "üåÄ Orb Inactive (Press E)"
label.Parent = gui

-- === Create Orb ===
local function createOrb()
	local character = LocalPlayer.Character
	if not character or not character:FindFirstChild("HumanoidRootPart") then return end
	
	local origin = character.HumanoidRootPart.Position
	local radius = 12
	local heightOffset = 5
	local orbParts = {}
	
	local allParts = {}
	for _, obj in pairs(workspace:GetDescendants()) do
		if obj:IsA("BasePart") and not obj:IsDescendantOf(character) then
			table.insert(allParts, obj)
		end
	end

	local angleStep = 360 / math.max(#allParts, 1)
	local currentAngle = 0
	
	for i, part in pairs(allParts) do
		local clone = part
		if part.Anchored then
			part.Anchored = false
		end

		currentAngle += angleStep
		local rad = math.rad(currentAngle)
		local x = math.cos(rad) * radius
		local z = math.sin(rad) * radius
		local targetPos = origin + Vector3.new(x, heightOffset, z)

		part.CFrame = CFrame.new(targetPos)
		part.Velocity = Vector3.zero
		part.RotVelocity = Vector3.zero

		-- Prevent physics explosions
		if part:IsA("BasePart") then
			part.CanCollide = true
		end

		table.insert(orbParts, part)
	end

	return orbParts
end

-- === Fling Any Touching Player ===
local function enableFlingDamage(orbParts)
	for _, part in pairs(orbParts) do
		part.Touched:Connect(function(hit)
			local plr = Players:GetPlayerFromCharacter(hit.Parent)
			if plr and plr ~= LocalPlayer then
				local hrp = hit.Parent:FindFirstChild("HumanoidRootPart")
				if hrp then
					hrp.Velocity = Vector3.new(math.random(-1,1),1,math.random(-1,1)).Unit * 150
					local hum = hit.Parent:FindFirstChildOfClass("Humanoid")
					if hum then hum:TakeDamage(999) end
				end
			end
		end)
	end
end

-- === Activation ===
local function activateOrb()
	label.Text = "üåÄ Orb Forming..."
	local orb = createOrb()
	wait(1)
	label.Text = "‚òÑÔ∏è Orb Active - Flinging on Touch"
	enableFlingDamage(orb)
end

-- === Keybind ===
UIS.InputBegan:Connect(function(input, gpe)
	if gpe then return end
	if input.KeyCode == Enum.KeyCode.E then
		activateOrb()
	end
end)

-- === Respawn Safety ===
LocalPlayer.CharacterAdded:Connect(function()
	wait(1)
	gui.Parent = game.CoreGui
	label.Text = "üåÄ Orb Inactive (Press E)"
end)

print("‚úÖ Orb of Death Script Loaded. Press E to summon chaos.")
