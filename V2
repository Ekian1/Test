--[[
  Xeno Server-Side Orb Flinger
  Press E (client) to activate orb around you (server moves parts)
  Orb flings and damages others who touch it
  GUI shows status to the player only
]]

local Players = game:GetService("Players")
local ReplicatedStorage = game:GetService("ReplicatedStorage")

-- Create RemoteEvent if missing
local orbEvent = ReplicatedStorage:FindFirstChild("OrbEvent")
if not orbEvent then
    orbEvent = Instance.new("RemoteEvent")
    orbEvent.Name = "OrbEvent"
    orbEvent.Parent = ReplicatedStorage
end

-- Helper: Create GUI status label for player
local function createGui(player)
    local success, result = pcall(function()
        local playerGui = player:WaitForChild("PlayerGui")
        local existingGui = playerGui:FindFirstChild("OrbFlingerGui")
        if existingGui then existingGui:Destroy() end

        local gui = Instance.new("ScreenGui")
        gui.Name = "OrbFlingerGui"
        gui.ResetOnSpawn = false
        gui.Parent = playerGui

        local label = Instance.new("TextLabel")
        label.Size = UDim2.new(0, 220, 0, 40)
        label.Position = UDim2.new(0, 20, 0, 100)
        label.BackgroundColor3 = Color3.fromRGB(20, 20, 20)
        label.TextColor3 = Color3.fromRGB(255, 255, 255)
        label.Font = Enum.Font.GothamBold
        label.TextSize = 18
        label.Text = "üåÄ Orb Inactive (Press E)"
        label.Name = "StatusLabel"
        label.Parent = gui
        return label
    end)
    if success then
        return result
    else
        warn("Failed to create GUI for "..player.Name..": "..tostring(result))
        return nil
    end
end

local playerData = {}

-- Function to create orb and connect fling touch events
local function createOrb(player)
    local char = player.Character
    if not char or not char:FindFirstChild("HumanoidRootPart") then return end
    local origin = char.HumanoidRootPart.Position

    local parts = {}
    for _, p in pairs(workspace:GetDescendants()) do
        if p:IsA("BasePart") and not p:IsDescendantOf(char) then
            table.insert(parts, p)
        end
    end

    local orbPartsConns = {}
    local radius = 12
    local angleStep = 360 / math.max(#parts, 1)
    local currentAngle = 0
    local heightOffset = 5

    for i, part in pairs(parts) do
        currentAngle = currentAngle + angleStep
        local rad = math.rad(currentAngle)
        local x = math.cos(rad) * radius
        local z = math.sin(rad) * radius
        local targetPos = origin + Vector3.new(x, heightOffset, z)

        part.Anchored = false
        part.AssemblyLinearVelocity = Vector3.zero
        part.AssemblyAngularVelocity = Vector3.zero
        part.CFrame = CFrame.new(targetPos)
        part.CanCollide = true

        orbPartsConns[part] = part.Touched:Connect(function(hit)
            local hitPlayer = Players:GetPlayerFromCharacter(hit.Parent)
            if hitPlayer and hitPlayer ~= player then
                local hrp = hit.Parent:FindFirstChild("HumanoidRootPart")
                local hum = hit.Parent:FindFirstChildOfClass("Humanoid")
                if hrp then
                    hrp.Velocity = Vector3.new(math.random(-50,50), 200, math.random(-50,50))
                end
                if hum then
                    hum:TakeDamage(100)
                end
            end
        end)
    end

    return orbPartsConns
end

-- Activate orb for a player
local function activateOrb(player)
    local data = playerData[player]
    if not data then return end

    local label = data.label
    if label then
        label.Text = "üåÄ Orb Forming..."
    end

    -- Disconnect previous connections safely
    if data.orbConns then
        for part, conn in pairs(data.orbConns) do
            if conn then
                conn:Disconnect()
            end
        end
    end

    data.orbConns = createOrb(player)

    task.wait(1)

    if label then
        label.Text = "‚òÑÔ∏è Orb Active - Fling on Touch"
    end
end

-- Setup player GUI and data on character spawn
local function setupPlayer(player)
    player.CharacterAdded:Connect(function()
        task.wait(1)
        local label = createGui(player)
        playerData[player] = playerData[player] or {}
        playerData[player].label = label
        playerData[player].orbConns = nil

        if label then
            label.Text = "üåÄ Orb Inactive (Press E)"
        end
    end)
end

-- Listen for player join
Players.PlayerAdded:Connect(function(player)
    setupPlayer(player)
end)

-- Setup for existing players (if script runs late)
for _, player in pairs(Players:GetPlayers()) do
    setupPlayer(player)
end

-- Handle remote event from client (player pressed E)
orbEvent.OnServerEvent:Connect(function(player)
    activateOrb(player)
end)

print("‚úÖ Orb Flinger Server script loaded successfully")
