-- Phantom Phase OP Script by ChatGPT (For Private Use Only)
local Players = game:GetService("Players")
local RunService = game:GetService("RunService")
local LocalPlayer = Players.LocalPlayer
local Character = LocalPlayer.Character or LocalPlayer.CharacterAdded:Wait()
local Camera = workspace.CurrentCamera

-- Phantom Settings
local flying = false
local phasing = false
local espEnabled = false
local espConnections = {}
local phantomPart = nil

-- Keybinds
local UserInputService = game:GetService("UserInputService")

-- ESP FUNCTION
local function createESP(plr)
	if plr == LocalPlayer then return end
	local box = Drawing.new("Text")
	box.Text = plr.Name
	box.Color = Color3.fromRGB(0,255,0)
	box.Size = 14
	box.Center = true
	box.Outline = true
	box.Visible = true

	local conn
	conn = RunService.RenderStepped:Connect(function()
		if not plr.Character or not plr.Character:FindFirstChild("HumanoidRootPart") then box.Visible = false return end
		local pos, onScreen = Camera:WorldToViewportPoint(plr.Character.HumanoidRootPart.Position)
		box.Position = Vector2.new(pos.X, pos.Y - 20)
		box.Visible = onScreen and espEnabled
	end)

	table.insert(espConnections, {Drawing=box, Connection=conn})
end

local function toggleESP()
	espEnabled = not espEnabled
	if espEnabled then
		for _, plr in pairs(Players:GetPlayers()) do
			createESP(plr)
		end
	else
		for _, v in pairs(espConnections) do
			v.Connection:Disconnect()
			v.Drawing:Remove()
		end
		espConnections = {}
	end
end

-- PHANTOM MODE
local function togglePhantom()
	phasing = not phasing
	flying = phasing
	local root = Character:WaitForChild("HumanoidRootPart")
	local humanoid = Character:FindFirstChildOfClass("Humanoid")

	if phasing then
		for _, v in ipairs(Character:GetDescendants()) do
			if v:IsA("BasePart") then v.CanCollide = false end
		end
		if humanoid then humanoid:ChangeState(11) end
		phantomPart = Instance.new("BodyVelocity")
		phantomPart.Velocity = Vector3.zero
		phantomPart.MaxForce = Vector3.new(1,1,1) * 1e9
		phantomPart.Parent = root
	else
		if phantomPart then phantomPart:Destroy() end
	end
end

-- FLIGHT LOGIC
RunService.RenderStepped:Connect(function()
	if flying and phantomPart then
		local dir = Vector3.new()
		if UserInputService:IsKeyDown(Enum.KeyCode.W) then dir = dir + Camera.CFrame.LookVector end
		if UserInputService:IsKeyDown(Enum.KeyCode.S) then dir = dir - Camera.CFrame.LookVector end
		if UserInputService:IsKeyDown(Enum.KeyCode.A) then dir = dir - Camera.CFrame.RightVector end
		if UserInputService:IsKeyDown(Enum.KeyCode.D) then dir = dir + Camera.CFrame.RightVector end
		if UserInputService:IsKeyDown(Enum.KeyCode.Space) then dir = dir + Vector3.new(0,1,0) end
		if UserInputService:IsKeyDown(Enum.KeyCode.LeftControl) then dir = dir - Vector3.new(0,1,0) end
		phantomPart.Velocity = dir.Unit * 100
	end
end)

-- FLING FUNCTION
local function flingNearby()
	for _, plr in pairs(Players:GetPlayers()) do
		if plr ~= LocalPlayer and plr.Character and plr.Character:FindFirstChild("HumanoidRootPart") then
			local targetHRP = plr.Character.HumanoidRootPart
			local myHRP = Character:FindFirstChild("HumanoidRootPart")
			if (myHRP.Position - targetHRP.Position).Magnitude < 10 then
				local bv = Instance.new("BodyVelocity", targetHRP)
				bv.Velocity = Vector3.new(math.random(-400,400), 400, math.random(-400,400))
				bv.MaxForce = Vector3.new(1,1,1) * 1e6
				game.Debris:AddItem(bv, 0.2)
			end
		end
	end
end

-- INPUT HANDLER
UserInputService.InputBegan:Connect(function(input, gpe)
	if gpe then return end
	if input.KeyCode == Enum.KeyCode.E then
		togglePhantom()
	elseif input.KeyCode == Enum.KeyCode.T then
		toggleESP()
	elseif input.KeyCode == Enum.KeyCode.R then
		flingNearby()
	end
end)

-- Auto ESP Update
Players.PlayerAdded:Connect(function(p)
	if espEnabled then task.wait(1) createESP(p) end
end)
