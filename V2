-- âœ… FULL TOOL GIVER SYSTEM (CLIENT + SERVER IN ONE SCRIPT)
-- Only works in PRIVATE SERVER or when executor can run server-side

local player = game:GetService("Players").LocalPlayer
local replicatedStorage = game:GetService("ReplicatedStorage")

-- ðŸ§  Check if server can be accessed
local canRunServer = pcall(function()
	return game:GetService("RunService"):IsServer()
end)

-- ðŸ’¡ SETUP REMOTE EVENT AND SERVER HANDLER
if canRunServer then
	-- Create RemoteEvent
	local remote = Instance.new("RemoteEvent")
	remote.Name = "GiveToolEvent"
	remote.Parent = replicatedStorage

	-- Create Tool Folder in ServerStorage (if doesn't exist)
	local toolFolder = game:GetService("ServerStorage"):FindFirstChild("Tools")
	if not toolFolder then
		toolFolder = Instance.new("Folder")
		toolFolder.Name = "Tools"
		toolFolder.Parent = game:GetService("ServerStorage")
	end

	-- Sample Tools (for demo only â€” add real tools in Studio or via executor)
	local function createSampleTool(name)
		local tool = Instance.new("Tool")
		tool.Name = name
		tool.RequiresHandle = false
		tool.CanBeDropped = true
		local scriptInside = Instance.new("Script")
		scriptInside.Source = [[print("Tool activated:", script.Parent.Name)]]
		scriptInside.Parent = tool
		tool.Parent = toolFolder
	end

	if #toolFolder:GetChildren() == 0 then
		createSampleTool("LaserGun")
		createSampleTool("GravityStick")
		createSampleTool("SwordOfDoom")
	end

	-- Give tool handler
	remote.OnServerEvent:Connect(function(player, toolName)
		local tool = toolFolder:FindFirstChild(toolName)
		if tool then
			local clone = tool:Clone()
			clone.Parent = player:FindFirstChild("Backpack") or player:WaitForChild("Backpack")
		end
	end)
end

-- âœ… GUI CODE (CLIENT SIDE)
-- Create GUI to request tools
local gui = Instance.new("ScreenGui", player:WaitForChild("PlayerGui"))
gui.Name = "ToolRequestGui"
gui.ResetOnSpawn = false

local title = Instance.new("TextLabel", gui)
title.Text = "ðŸ§° Server Tools"
title.Size = UDim2.new(0, 300, 0, 40)
title.Position = UDim2.new(0, 20, 0.1, 0)
title.BackgroundColor3 = Color3.fromRGB(25, 25, 25)
title.TextColor3 = Color3.new(1, 1, 1)
title.Font = Enum.Font.GothamBold
title.TextSize = 20

local frame = Instance.new("ScrollingFrame", gui)
frame.Size = UDim2.new(0, 300, 0.6, 0)
frame.Position = UDim2.new(0, 20, 0.1 + 40/1080, 0)
frame.BackgroundColor3 = Color3.fromRGB(30, 30, 30)
frame.ScrollBarThickness = 6

local layout = Instance.new("UIListLayout", frame)
layout.Padding = UDim.new(0, 4)
layout.SortOrder = Enum.SortOrder.Name

-- Wait for RemoteEvent
local remoteEvent = replicatedStorage:WaitForChild("GiveToolEvent", 10)
if not remoteEvent then
	error("GiveToolEvent not found. Make sure script can run on server.")
end

-- Get tool list from ServerStorage.Tools
local toolFolder = game:GetService("ServerStorage"):FindFirstChild("Tools")
if not toolFolder then
	error("ServerStorage.Tools folder not found.")
end

for _, tool in ipairs(toolFolder:GetChildren()) do
	if tool:IsA("Tool") then
		local button = Instance.new("TextButton")
		button.Size = UDim2.new(1, -10, 0, 40)
		button.BackgroundColor3 = Color3.fromRGB(45, 45, 45)
		button.TextColor3 = Color3.new(1,1,1)
		button.Font = Enum.Font.GothamBold
		button.TextSize = 16
		button.Text = "Get: " .. tool.Name
		button.Parent = frame

		button.MouseButton1Click:Connect(function()
			remoteEvent:FireServer(tool.Name)
			button.Text = "âœ… Given: " .. tool.Name
		end)
	end
end

frame.CanvasSize = UDim2.new(0, 0, 0, #frame:GetChildren() * 44)

