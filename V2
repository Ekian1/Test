--[[
  Xeno Server-Side Orb Flinger
  Press E to form orb of parts around YOU.
  Touch orb parts to get flung + damaged.
  GUI shows orb status, works after death.
]]

local Players = game:GetService("Players")
local UIS = game:GetService("UserInputService") -- server can listen if executor supports
local RS = game:GetService("RunService")
local LocalPlayer = Players.LocalPlayer

-- Wait for player to load
while not LocalPlayer or not LocalPlayer.Character or not LocalPlayer.Character:FindFirstChild("HumanoidRootPart") do
	task.wait()
	LocalPlayer = Players.LocalPlayer
end

local gui = Instance.new("ScreenGui")
gui.Name = "OrbFlingerGui"
gui.ResetOnSpawn = false
gui.Parent = LocalPlayer:WaitForChild("PlayerGui")

local label = Instance.new("TextLabel")
label.Size = UDim2.new(0, 220, 0, 40)
label.Position = UDim2.new(0, 20, 0, 100)
label.BackgroundColor3 = Color3.fromRGB(20, 20, 20)
label.TextColor3 = Color3.fromRGB(255, 255, 255)
label.Font = Enum.Font.GothamBold
label.TextSize = 18
label.Text = "üåÄ Orb Inactive (Press E)"
label.Parent = gui

-- Store orb parts to connect touch event only once
local orbParts = {}

-- Create orb around player
local function createOrb(player)
	if not player.Character or not player.Character:FindFirstChild("HumanoidRootPart") then return end
	local origin = player.Character.HumanoidRootPart.Position

	local parts = {}
	for _, part in pairs(workspace:GetDescendants()) do
		if part:IsA("BasePart") and not part:IsDescendantOf(player.Character) then
			table.insert(parts, part)
		end
	end

	local radius = 12
	local angleStep = 360 / math.max(#parts, 1)
	local currentAngle = 0
	local heightOffset = 5

	for i, part in pairs(parts) do
		currentAngle = currentAngle + angleStep
		local rad = math.rad(currentAngle)
		local x = math.cos(rad) * radius
		local z = math.sin(rad) * radius
		local targetPos = origin + Vector3.new(x, heightOffset, z)

		part.Anchored = false
		part.AssemblyLinearVelocity = Vector3.zero
		part.AssemblyAngularVelocity = Vector3.zero
		part.CFrame = CFrame.new(targetPos)
		part.CanCollide = true

		orbParts[part] = orbParts[part] or part.Touched:Connect(function(hit)
			local hitPlayer = Players:GetPlayerFromCharacter(hit.Parent)
			if hitPlayer and hitPlayer ~= player then
				local hrp = hit.Parent:FindFirstChild("HumanoidRootPart")
				local hum = hit.Parent:FindFirstChildOfClass("Humanoid")
				if hrp then
					hrp.Velocity = Vector3.new(math.random(-50,50), 200, math.random(-50,50))
				end
				if hum then
					hum:TakeDamage(100)
				end
			end
		end)
	end
end

-- Activate orb flinger
local function activateOrb()
	label.Text = "üåÄ Orb Forming..."
	createOrb(LocalPlayer)
	task.wait(1)
	label.Text = "‚òÑÔ∏è Orb Active - Fling on Touch"
end

-- Listen for E press server-side
UIS.InputBegan:Connect(function(input, gameProcessed)
	if gameProcessed then return end
	if input.KeyCode == Enum.KeyCode.E then
		activateOrb()
	end
end)

-- Reset GUI after respawn
Players.LocalPlayer.CharacterAdded:Connect(function()
	task.wait(1)
	if not gui.Parent then
		gui.Parent = Players.LocalPlayer:WaitForChild("PlayerGui")
	end
	label.Text = "üåÄ Orb Inactive (Press E)"
end)

print("‚úÖ Xeno Orb Flinger Server-Side script loaded. Press E to activate.")
